fmod PROGRAM is
  
  inc COMPENENT-TYPE .
  inc IDENT-COMPENENT-BEHAVIOR .
  inc CONNECTION .

  sorts Program . 
  pr LIST{Instruction} .
  subsort List{Instruction} < Program . 

  var Rx : Program .
  var L : Connection .
  var Inst : Instruction .
  var Id1 : IdentInstance .
  var IdBeh : IdentBehavior .
  var Beh : Behavior .

  op add(_,_) : IdentInstance ComponentType -> Instruction .
  op del(_) : IdentInstance -> Instruction .
  op pushB(_,_,_) : IdentInstance Behavior IdentBehavior -> Instruction .
  op con(_) : Connection -> Instruction .
  op dcon(_) : Connection -> Instruction .
  op wait(_,_) : IdentInstance IdentBehavior -> Instruction .

 --- some operations related to program used later
  op NotDcon(_,_) :  Connection Program -> Bool .  
  ---check for a given connection, there is no dcon instrcution in a given program
  eq NotDcon(L,nil) = true .
  eq NotDcon(L,Inst  Rx) = (Inst =/= dcon(L) and NotDcon(L,Rx)) .

  op Disconnect(_,_) : Connection Program -> Bool .  
  --- used to check that the dcon instruction is the current instruction or has already been executed
  --- then it is the same as checking that the remaining program does not contain dcon after the current instruction
  --- this reasoning is correct if we assume that Concerto programs are well constructed.
  eq Disconnect(L,nil) = true .
  eq Disconnect(L,Inst Rx) = NotDcon(L,Rx) .
  
  op InstructionIspushB(_,_,_) : Instruction IdentInstance IdentBehavior -> Bool .  
  --- checks whether the current instruction is a push instruction for a given IdentInstance and IdentBehavior
  eq InstructionIspushB(pushB(Id1,Beh,IdBeh), Id1,IdBeh ) = true .
  eq InstructionIspushB(Inst, Id1,IdBeh ) = false [owise] .

  op NotPushBProg(_,_,_) : IdentInstance IdentBehavior Program -> Bool .  
  ---checks that in a given program there is no push Behavior Instruction for IdentInstance and IdentBehavior
  eq NotPushBProg(Id1,IdBeh, nil) = true .
  ceq NotPushBProg(Id1,IdBeh,Inst Rx) = NotPushBProg(Id1,IdBeh,Rx) if (not InstructionIspushB(Inst,Id1,IdBeh)) .
  ceq NotPushBProg(Id1,IdBeh,Inst Rx) = false if (InstructionIspushB(Inst,Id1,IdBeh)) .
  
endfm