fmod PROGRAM is
  
  inc COMPONENT-TYPE .
  inc ID-COMPONENT-BEHAVIOR .
  inc CONNECTION .

  sorts Program . 
  pr LIST{Instruction} .
  subsort List{Instruction} < Program . 

  var Rx : Program .
  var L : Connection .
  var Inst : Instruction .
  var Id1 : IdInstance .
  var IdBeh : IdBehavior .
  var Beh : Behavior .

  op add(_,_) : IdInstance ComponentType -> Instruction [ctor] .
  op del(_) : IdInstance -> Instruction [ctor] .
  op pushB(_,_,_) : IdInstance Behavior IdBehavior -> Instruction [ctor] .
  op con(_) : Connection -> Instruction [ctor] .
  op dcon(_) : Connection -> Instruction [ctor] .
  op wait(_,_) : IdInstance IdBehavior -> Instruction [ctor] .



 --- some operations related to program used later
  op notDcon(_,_) :  Connection Program -> Bool .  
  ---check for a given connection, there is no dcon instrcution in a given program
  eq notDcon(L,nil) = true .
  eq notDcon(L,Inst  Rx) = (Inst =/= dcon(L) and notDcon(L,Rx)) .

  op disconnect(_,_) : Connection Program -> Bool .  
  --- used to check that the dcon instruction is the current instruction or has already been executed
  --- then it is the same as checking that the remaining program does not contain dcon after the current instruction
  --- this reasoning is correct if we assume that Concerto programs are well constructed.
  eq disconnect(L,nil) = true .
  eq disconnect(L,Inst Rx) = notDcon(L,Rx) .
  
  op instructionIspushB(_,_,_) : Instruction IdInstance IdBehavior -> Bool .  
  --- checks whether the current instruction is a push instruction for a given IdInstance and IdBehavior
  eq instructionIspushB(pushB(Id1,Beh,IdBeh), Id1,IdBeh ) = true .
  eq instructionIspushB(Inst, Id1,IdBeh ) = false [owise] .

  op notPushBProg(_,_,_) : IdInstance IdBehavior Program -> Bool .  
  ---checks that in a given program there is no push Behavior Instruction for IdInstance and IdBehavior
  eq notPushBProg(Id1,IdBeh, nil) = true .
  ceq notPushBProg(Id1,IdBeh,Inst Rx) = notPushBProg(Id1,IdBeh,Rx) if (not instructionIspushB(Inst,Id1,IdBeh)) .
  eq notPushBProg(Id1,IdBeh,Inst Rx) = false [owise] .
  
endfm