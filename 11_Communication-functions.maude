
fmod UPDATE-COMMUNICATION-MESSAGES is

    inc CONCERTO-D-CONFIGURATION .

    var IdIx : IdentInstances . 
    var L : Connections .
    var Mx : Map{Request,ExpectedValue} .
    var val : ExpectedValue .
    var Use : UsePort .
    var Pro : ProvidePort .
    var R : Request .
    vars Id1 Id2 : IdentInstance .

    op identInstanceConnectionWhenSendActive(_,_,_) : Connections Request ExpectedValue -> IdentInstances .

    --- to maintain the consistency of exchanged information between nodes, an update is necessary for the old information received. 
    --- the update is applied when a local configuration communicates by message the information on one of the use ports of its instances which is not active, 
    --- in this case it sets the external information on the refusing of the corresponding provide port (in connection with the concerned use port) as unknown (noValueYet). 
    --- so, the objective of this op is to determine the Ident Id2 of the instacne of the remote node in relation with the local instance identified by Id1, 
    --- which claims the active function which has a false evaluation. 
    --- Note that the expected result of this op is Id2 if it exists, otherwise empty, 
    --- so the result is a set that can contain either an empty element or a single identifier.
    eq identInstanceConnectionWhenSendActive(((Id1,Use,Id2,Pro),L),[ dst: Id1 , query: isActive(Use) ],false) = Id2 . 
    eq identInstanceConnectionWhenSendActive(empty,R,val) = empty . 
    eq identInstanceConnectionWhenSendActive(((Id1,Use,Id2,Pro),L),R,val) = identInstanceConnectionWhenSendActive(L,R,val) [owise] . 

----------A optimiser suivant AC par deux equiations.


    op  upDateReceivedAnswers(_,_) : Map{Request,ExpectedValue} IdentInstances -> Map{Request,ExpectedValue} .  
    --- The update is related only to message related to the refusing function who we know its identifier if exist.
    eq  upDateReceivedAnswers(Mx,empty) = Mx .
    eq  upDateReceivedAnswers(empty,IdIx) = empty .
    ceq upDateReceivedAnswers(([ dst: Id1 , query: isRefusing(Pro) ] |-> val,Mx),IdIx) = [ dst: Id1 , query: isRefusing(Pro) ] |-> noValueYet, Mx if (Id1 in IdIx ) .
    eq  upDateReceivedAnswers((R |-> val,Mx),IdIx) = R |-> val, upDateReceivedAnswers(Mx,IdIx) [owise] .
    
endfm


