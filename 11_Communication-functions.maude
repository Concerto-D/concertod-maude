
fmod UPDATE-COMMUNICATION-MESSAGES is

    inc CONCERTO-D-CONFIGURATION .

    var Idsx : IdInstances . 
    var Cx : Connections .
    var RcvAnsx : Map{Request,Bool} .
    var Val : Bool .
    var Use : UsePort .
    var Pro : ProvidePort .
    var R : Request .
    vars Id1 Id2 : IdInstance .

    op IdInstanceConnectionWhenSendActive(_,_,_) : Connections Request Bool -> IdInstances .

    --- to maintain the consistency of exchanged information between nodes, an update is necessary for the old information received. 
    --- the update is applied when a local configuration communicates by message the information on one of the use ports of its instances which is not active, 
    --- in this case it removes the external information on the refusing of the corresponding provide port (in connection with the concerned use port). 
    --- so, the objective of this op is to determine the Ident Id2 of the instacne of the remote node in relation with the local instance identified by Id1, 
    --- which claims the active function which has a false evaluation. 
    --- Note that the expected result of this op is Id2 if it exists, otherwise empty, 
    --- so the result is a set that can contain either an empty element or a single identifier.
    eq IdInstanceConnectionWhenSendActive((((Id1,Use)--(Id2,Pro)),Cx),[ dst: Id1 , query: isActive(Use) ],false) = Id2 . 
    eq IdInstanceConnectionWhenSendActive(Cx,R,Val) = empty [owise] . 
    
    --- HELENE only one case is handled (provide ask a use port its activity)?
    --- HELENE not enough time to change this in the current version but future work
    op  upDateReceivedAnswers(_,_) : Map{Request,Bool} IdInstances -> Map{Request,Bool} .  
    --- The update is related only to message related to the refusing function who we know its identifier if exist.
    eq  upDateReceivedAnswers(RcvAnsx,empty) = RcvAnsx .
    eq  upDateReceivedAnswers(empty,Idsx) = empty .
    ceq upDateReceivedAnswers(([ dst: Id1 , query: isRefusing(Pro) ] |-> Val, RcvAnsx), Idsx) = RcvAnsx if (Id1 in Idsx ) .
    eq  upDateReceivedAnswers((R |-> Val, RcvAnsx), Idsx) = R |-> Val, RcvAnsx [owise] .
    
endfm


