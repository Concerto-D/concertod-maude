
fmod COMMUNICATION-FUNCTIONS is

    inc CONCERTO-D-CONFIGURATION .

    var idcs : IdentInstances . 
    var f : MsgToUses .
    var bwb : BoolWithBot .
    var L : Connections .
    var up : UsePort .
    var pp : ProvidePort .
    var idf1 : Msg .
    vars id1 id2 : IdentInstance .

   op IdentInstanceonnectionWhenSendActive(_,_,_) : Connections Msg BoolWithBot -> IdentInstances .
   --- Since the update when sending an evaluation of a local function only concerns 
   --- the case of the refusing function if the sender sends an evlaution (false) for its active function'ExprActive(id1,u)'. 
   --- The objective of this function is to determine the ident id2 of instacne of the remote site in relation with the local instance identified by id1, 
   --- which claims the active function with a false evlaution. 
   --- Note that the expected result of this function is id2 if it exists, otherwise empty, 
   --- so the result of the function is a set that can contain either an empty element or a single identifier.
 
    eq IdentInstanceonnectionWhenSendActive(((id1,up,id2,pp),L),ExprActive(id1,up),false) = id2 . 
    eq IdentInstanceonnectionWhenSendActive(empty,idf1,bwb) = empty . 
    eq IdentInstanceonnectionWhenSendActive(((id1,up,id2,pp),L),idf1,bwb) = IdentInstanceonnectionWhenSendActive(L,idf1,bwb) [owise] . 

    op  UpDateMsgToUsesSend(_,_) : MsgToUses IdentInstances -> MsgToUses .  
    --- The update is related only to the refusing function who we know its identifier if exist.
    eq  UpDateMsgToUsesSend(f,empty) = f .
    eq  UpDateMsgToUsesSend(empty,idcs) = empty .
    ceq UpDateMsgToUsesSend((extern(ExprRefusing(id1,pp) ; bwb),f),idcs) = extern(ExprRefusing(id1,pp) ; bot), f if (id1 in idcs ) .
    eq  UpDateMsgToUsesSend((extern(idf1 ; bwb),f),idcs) = extern(idf1 ; bwb), UpDateMsgToUsesSend(f,idcs) [owise] .
    
endfm

