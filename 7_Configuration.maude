***(fmod CONCERTO-D-CONFIGURATION is 

  inc ANSWER .
  inc INSTANCE .
  inc PROGRAM .
  inc CONNECTION .
  inc DECLARATION-SORTS . 

  pr SET{Request} . 
  pr MAP{Request,ExpectedValue} .
  pr LIST{Request} . 
  pr LIST{Answer} .

  sorts  Qrequests Qanswers  .  --- define new sorts of queues
  subsort List{Request} < Qrequests . 
  subsort List{Answer} < Qanswers . 
  
  --- Pas sûr pour les noms des différents ensembles et files
  op < nodeInventory: _, instances: _, 
       connections: _, program: _, 
       receivedAnswers: _, outgoingAnswers: _, outgoingRequests: _, 
       history: _ > : 
  IdentInstances Instances Connections Program 
  Map{Request,ExpectedValue} Qanswers Qrequests 
  Set{Request} -> LocalConfiguration 
  [ctor format(n s s d n++i s d ni s d ni s d ni s d ni s d ni s d ni s d s--i) ] .   

endfm

)
fmod CONCERTO-D-CONFIGURATION is 

  inc ANSWER .
  inc INSTANCE .
  inc PROGRAM .
  inc CONNECTION .
  inc DECLARATION-SORTS . 

  pr SET{Request} . 
  pr MAP{Request,ExpectedValue} .
  pr LIST{Request} . 
  pr LIST{Answer} .

  sorts  Qrequests Qanswers  . 
  subsort List{Request} < Qrequests . 
  subsort List{Answer} < Qanswers . 

  var Ix : Instances .
  var I1 : Instance .
  var Idsx : IdentInstances .
  var IdBeh : IdentBehavior .
  var Ct : ComponentType .
  var Port : Port .
  var Lx : Connections .
  var Px : Program .
  var L : Connection .
  var Qb : QBehaviorWithId .
  var Mark : Marking .
  var Q : Query .
  var Id : IdentInstance .
  vars R1 R2 : Request .
  var RcvAnsx : Map{Request,ExpectedValue} .
  var val : ExpectedValue .

  op < nodeInventory: _, instances: _, 
       connections: _, program: _, 
       receivedAnswers: _, outgoingAnswers: _, outgoingRequests: _, 
       history: _ > : 
  IdentInstances Instances Connections Program 
  Map{Request,ExpectedValue} Qanswers Qrequests 
  Set{Request} -> LocalConfiguration 
  [ctor format(n s s d n++i s d ni s d ni s d ni s d ni s d ni s d ni s d s--i) ] .   

  --- some ops on configuration
 op isProcessedLocallyEvaluation(_,_) : Request IdentInstances -> Bool .  
  --- determine whether a Request is related to a local treatement.
 eq isProcessedLocallyEvaluation([ dst: Id , query: Q ], Idsx) = Id in Idsx .


  op externEvaluation(_,_) : Request Map{Request,ExpectedValue}  -> ExpectedValue .  
  ---obtain the evalaution of an external function related to a Request from Map{Request,ExpectedValue}
  eq externEvaluation(R1, R1 |-> val, RcvAnsx ) = val  .
  eq externEvaluation(R1, RcvAnsx ) =  noValueYet [owise] .

  op localEvaluation(_,_,_,_) : Request Instances Connections Program -> ExpectedValue .  
  ---- gives the evaluation of a local function related to Request according to certain parameters of a given configuration
  
  ---if the instance does not yet exist, then the active local function: active(Id1,Port) = false, otherwise it is the local active function within the instance. 
  eq localEvaluation ([ dst: Id , query: isActive(Port) ],(Id |-> I1, Ix),Lx,Px) =  active(I1,Port) .
  eq localEvaluation ([ dst: Id , query: isActive(Port) ],Ix,Lx,Px) =  noValueYet [owise] .

  ---if the instance does not yet exist, then the refusing local function: refusing(Id1,Port) = true, otherwise it is the local refusing function within the instance.
  eq localEvaluation ([ dst: Id , query: isRefusing(Port) ],(Id |-> I1, Ix),Lx,Px) =   refusing(I1,Port) .
  eq localEvaluation ([ dst: Id , query: isRefusing(Port) ],Ix,Lx,Px) =  noValueYet [owise] .
      
  eq localEvaluation ([ dst: Id , query: isConnected(L) ], Ix,Lx,Px) = L in Lx . 

  eq localEvaluation ([ dst: Id , query: isDisconnect(L) ], Ix,Lx,Px) = disconnect(L,Px) . 
 
  eq localEvaluation ([ dst: Id , query: isCompleted(IdBeh) ], (Id |-> { type: Ct,queueBehavior: Qb,marking: Mark },Ix),Lx,Px) =  
  (not existIdentBehaviorehListBeh(IdBeh,Qb) ) and notPushBProg(Id,IdBeh,Px) .
  --- the evaluation of completed of an IdBeh depends on whether the push IdBeh exists in the program or in the behavior list.
  eq localEvaluation ([ dst: Id , query: isCompleted(IdBeh) ], Ix,Lx,Px) =  if ((not isUsedIdentInstances(Id,Ix) ) and notPushBProg(Id,IdBeh,Px)) then true else false fi . 
  --- special case the instance doesn't exist and even the push of IdBeh in the program. this is the case when a program is executed and its instance is deleted.

  op evaluation(_,_,_,_,_,_) :  Request IdentInstances Map{Request,ExpectedValue} Instances Connections Program -> ExpectedValue . 
  --- gives the evaluation of a function related to Request according to the two cases, the function is local or external
  eq evaluation(R1,Idsx,RcvAnsx, Ix,Lx,Px ) = if (isProcessedLocallyEvaluation(R1,Idsx)) then localEvaluation(R1,Ix,Lx,Px) else externEvaluation(R1,RcvAnsx) fi .

endfm