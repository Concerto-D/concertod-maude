
fmod CONCERTO-D-CONFIGURATION is 

  inc MESSAGE .
  inc INSTANCE .
  inc PROGRAM .
  inc CONNECTION .
  inc DECLARATION-SORTS . 

  pr SET{Question} . 
  pr MAP{Question, Bool} .
  pr LIST{Question} . 
  pr LIST{Message} .

  var Is : Instances .
  var I1 : Instance .
  var Ids : Ids .
  var IdBeh : Id .
  var Ct : ComponentType .
  var Port : Port .
  var Cs : Connections .
  var RP : Program .
  var C : Connection .
  var Qb : List{PushedBehavior} .
  var M : Marking .
  var Q : Query .
  var Id : Id .
  vars R1 R2 : Question .
  var RcvAns : Map{Question, Bool} .
  var Val : Bool .
 
  op  < nodeInventory: _, 
        instances: _, 
        connections: _,
        program: _,
        receivedAnswers: _, 
        outgoingAnswers: _, 
        outgoingRequests: _, 
        history: _,
        buffer: _ 
      > : 
      Ids Instances Connections Program 
      Map{Question, Bool} List{Question} List{Question} 
      Set{Question} List{Message} -> LocalConfiguration 
      [ctor format(n++i s s d n++i s d ni s d ni s d ni s d ni s d ni s d ni s d ni s d s----i)].

  --- some ops on configuration

  op isLocal(_,_) : Question Ids -> Bool .  
  --- determine whether a Question is related to a local treatement.
  eq isLocal([ dst: Id , query: Q ], Ids) = Id in Ids .

  op externFunCall(_,_) : Question Map{Question, Bool}  -> Bool .  
  --- get the evalaution of an external function related to a Question from Map{Question, Bool}
  eq externFunCall(R1, R1 |-> Val, RcvAns ) = Val .
  --- eq externFunCall(R1, RcvAns ) =  noValueYet [owise] .

  op localFunCall(_,_,_,_) : Question Instances Connections Program -> Bool .  
  ---- gives the evaluation of a local function related to Question according to certain parameters of a given configuration
  
  ---if the instance does not yet exist, then the active local function: isActiveLocal(Id1, Port) = false, otherwise it is the local active function within the instance. 
  eq localFunCall ([ dst: Id , query: isActive(Port) ],(Id |-> I1, Is), Cs, RP) =  isActiveLocal(I1, Port) .
  --- eq localFunCall ([ dst: Id , query: isActive(Port) ],Is,Cs,RP) =  noValueYet [owise] .

  ---if the instance does not yet exist, then the refusing local function: isRefusingLocal(Id1,Port) = true, otherwise it is the local refusing function within the instance.
  eq localFunCall ([ dst: Id , query: isRefusing(Port) ], (Id |-> I1, Is), Cs, RP) = isRefusingLocal(I1, Port) .
  ---eq localFunCall ([ dst: Id , query: isRefusing(Port) ], Ix, Lx, Px) =  noValueYet [owise] .
      
  eq localFunCall ([ dst: Id , query: isConnected(C) ], Is,Cs,RP) = C in Cs . 

  eq localFunCall ([ dst: Id , query: onDisconnect(C) ], Is,Cs,RP) = onDisconnectLocal(C,RP) . 
 
  eq localFunCall ([ dst: Id , query: isCompleted(IdBeh) ], (Id |-> { type: Ct, queue: Qb, marking: M },Is),Cs,RP) =  
  (not isBehaviorinList(IdBeh,Qb) ) and isCompletedLocal(Id,IdBeh,RP) .
  --- the evaluation of completed of an IdBeh depends on whether the push IdBeh exists in the program or in the behavior list.
  eq localFunCall ([ dst: Id , query: isCompleted(IdBeh) ], Is,Cs,RP) =  isCompletedLocal(Id,IdBeh,RP) [owise] . 
  --- special case the instance doesn't (the instance is not yet added or it is deleted)

  op funCall(_,_,_,_,_,_) :  Question Ids Map{Question, Bool} Instances Connections Program -> Bool . 
  --- gives the evaluation of a function related to Question according to the two cases, the function is local or external
  eq funCall(R1,Ids,RcvAns, Is,Cs,RP ) = if (isLocal(R1,Ids)) then localFunCall(R1,Is,Cs,RP) else externFunCall(R1,RcvAns) fi .

endfm