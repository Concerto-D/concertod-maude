

fmod COMPENENT-TYPE is
  
  inc STATION-PLACE .
  inc TRANSITION-TRANSITION-ENDING .
  inc BEHAVIOR .
  inc PORT .
  inc DECLARATION-SORTS . --- to include the defined sorts GroupUse GroupProvide 
  inc MARKING . 
  
  sorts ComponentType GroupUses GroupProvides .  ---define new sorts
  
  pr SET{GroupUse} .
  subsort Set{GroupUse} < GroupUses . --- GroupUses is a set of GroupUse

  pr SET{GroupProvide} .
  subsort Set{GroupProvide} < GroupProvides . ---GroupProvides is a set of GroupProvide  

  vars ps ps1 : Places .
  var q : InitialPlace .
  var sps : StationPlaces .
  var ts  : Transitions . 
  var bs : Behaviors .
  var gu : GroupUses .
  var gp : GroupProvides .
  vars up up1 : UsePort .
  vars pp pp1 : ProvidePort .
  var beh  : Behavior .

  op (_!_) : UsePort Places -> GroupUse . --- GroupUse is defined as tuple : the use port and a group (set) of places
  op (_?_) : ProvidePort Places -> GroupProvide . --- GroupProvide is defined as tuple : the provide port and a group (set) of places
  op < _,_,_,_,_,_,_ > : Places InitialPlace StationPlaces Transitions Behaviors GroupUses GroupProvides -> ComponentType . ---Component type definition

  --- some operations related to ComponentType used later
  op InitialPlace(_) : ComponentType -> Place .  --- to get the initial place of component type
  
  eq InitialPlace (< ps,q,sps,ts,bs,gu,gp >) = q .

  op GetStationPlaces(_) : ComponentType -> StationPlaces . --- to get the set of tuples (station; place)
  
  eq GetStationPlaces (< ps,q,sps,ts,bs,gu,gp >) = sps .

  op GetUsePorts(_) : ComponentType -> GroupUses . --- to get the set of the use ports of the component

  eq GetUsePorts (< ps,q,sps,ts,bs,gu,gp >) = gu .

  op PlacesOfUsePort(_,_) : UsePort GroupUses -> Places . --- to get places of a use port from a set of use ports
 
  eq PlacesOfUsePort(up,empty) = empty .
  eq PlacesOfUsePort(up,(up ! ps),gu) = ps . 
  eq PlacesOfUsePort(up,(up1 ! ps),gu) = PlacesOfUsePort(up,gu) [owise] . 
   
  op PlacesOfProvidePort(_,_) : ProvidePort GroupProvides -> Places . --- to get places of a provide port from a set of use ports

  eq PlacesOfProvidePort(pp,empty) = empty .
  eq PlacesOfProvidePort(pp,((pp ? ps),gp)) = ps  . 
  eq PlacesOfProvidePort(pp,((pp1 ? ps),gp)) = PlacesOfProvidePort(pp,gp) [owise] . 
   
  op GroupPlacesofPort(_,_) : Port ComponentType -> Places . --- to get places of a port use or provide
  
  eq GroupPlacesofPort(up,< ps,q,sps,ts,bs,gu,gp >) = PlacesOfUsePort(up,gu)  .
  eq GroupPlacesofPort(pp,< ps,q,sps,ts,bs,gu,gp > ) = PlacesOfProvidePort(pp,gp)  .

  op IsBehaviorOfComponent(_,_) : Behavior ComponentType -> Bool . 
  --- to check whether a behavior is used in ComponentType, in particular in its behaviors

  eq IsBehaviorOfComponent(beh,< ps,q,sps,ts,bs,gu,gp >) = beh in bs .
  
  op MarkingWithRespectToPlaces(_,_) : Places ComponentType -> Marking .   
  --- gives the elements of Marking (places, transitions, TransitionEndings) of group of places depending a ComponentType

  eq MarkingWithRespectToPlaces(ps1,< ps,q,sps,ts,bs,gu,gp >) = 
  m(ps1, TransitionsOfPlacesWithRespectToStations(ps1,ts,StationsGroupPlaces(ps1,sps)), TransitionEndingsOfTransitions(TransitionsOfPlacesWithRespectToStations(ps1,ts,StationsGroupPlaces(ps1,sps)))) .

endfm


--- voir comment reduire le calcul de marking

